
@startuml
package "complex.py" {
  class Complex {
    - _re: float
    - _im: float
    --
    + __init__(re: float = 0.0, im: float = 0.0)
    + re(): float
    + im(): float
    + conjugate(): Complex
    + __add__(other: Complex): Complex
    + __mul__(other: Complex): Complex
    + __eq__(other: Complex): bool
    + __ne__(other: Complex): bool
    + __abs__(): float
    + __str__(): str
  }

  note right of Complex
    Operador y utilidades:
    - __add__, __mul__ (operadores)
    - __eq__, __ne__ (comparación)
    - __abs__ (módulo)
    - __str__ (representación)
  end note

  note bottom of "complex.py"
    Función a nivel de módulo:
    - main(): imprime (z*z + z0) dos veces y muestra el resultado.
  end note
}
@enduml
